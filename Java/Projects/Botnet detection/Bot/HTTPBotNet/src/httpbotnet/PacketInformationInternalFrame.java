/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PacketInformationInternalFrame.java
 *
 * Created on Jan 16, 2013, 8:49:34 AM
 */
package httpbotnet;

import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import net.sourceforge.jpcap.net.ARPPacket;
import net.sourceforge.jpcap.net.ICMPPacket;
import net.sourceforge.jpcap.net.Packet;
import net.sourceforge.jpcap.net.TCPPacket;
import net.sourceforge.jpcap.net.UDPPacket;

/**
 *
 * @author Student
 */
public class PacketInformationInternalFrame extends javax.swing.JInternalFrame {

    private Packet packet;
    /** Creates new form PacketInformationInternalFrame */
    public PacketInformationInternalFrame(Packet packet) {
        initComponents();
        
        this.packet = packet;
        
        final Vector<Object[]> packetInformation = new Vector<Object[]>();

        String packetType = "";
        
        if(packet instanceof TCPPacket) {
            packetType = "TCP Packet";
            TCPPacket tcpPacket = (TCPPacket) packet;
            packetInformation.add(new Object[] { "Packet Type:",packetType });
            packetInformation.add(new Object[] { "Source Address:",tcpPacket.getSourceAddress() });
            packetInformation.add(new Object[] { "Destination Address:",tcpPacket.getDestinationAddress() });
            packetInformation.add(new Object[] { "Source Port:",tcpPacket.getSourcePort() });
            packetInformation.add(new Object[] { "Destination Port:",tcpPacket.getDestinationPort() });
            
            
        } else if(packet instanceof UDPPacket) {
            packetType = "UDP Packet";
            UDPPacket tcpPacket = (UDPPacket) packet;
            packetInformation.add(new Object[] { "Packet Type:",packetType });
            packetInformation.add(new Object[] { "Source Address:",tcpPacket.getSourceAddress() });
            packetInformation.add(new Object[] { "Destination Address:",tcpPacket.getDestinationAddress() });
            packetInformation.add(new Object[] { "Source Port:",tcpPacket.getSourcePort() });
            packetInformation.add(new Object[] { "Destination Port:",tcpPacket.getDestinationPort() });

           
            
        } else if(packet instanceof ARPPacket) {
            packetType = "ARP Packet";
            ARPPacket tcpPacket = (ARPPacket) packet;
            packetInformation.add(new Object[] { "Packet Type:",packetType });
            packetInformation.add(new Object[] { "Source Address:",tcpPacket.getSourceHwAddress() });
            packetInformation.add(new Object[] { "Destination Address:",tcpPacket.getDestinationHwAddress() });
            packetInformation.add(new Object[] { "Source Poto:",tcpPacket.getSourceProtoAddress() });
            packetInformation.add(new Object[] { "Destination Proto:",tcpPacket.getDestinationProtoAddress() });            
        } else if(packet instanceof ICMPPacket) {
            packetType = "ICMP Packet";
            ICMPPacket tcpPacket = (ICMPPacket) packet;
            packetInformation.add(new Object[] { "Packet Type:",packetType });
            packetInformation.add(new Object[] { "Checksum:",tcpPacket.getICMPChecksum() });
            packetInformation.add(new Object[] { "Source Address:",tcpPacket.getSourceAddress() });
            packetInformation.add(new Object[] { "Destination Address:",tcpPacket.getDestinationAddress() });
        }
        
        this.jTable1.setModel(new AbstractTableModel() {

            public int getRowCount() {
                return packetInformation.size();
            }

            public int getColumnCount() {
                return 2;
            }

            public Object getValueAt(int rowIndex, int columnIndex) {
                return packetInformation.get(rowIndex)[columnIndex];
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(httpbotnet.HTTPBotNetApp.class).getContext().getResourceMap(PacketInformationInternalFrame.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setName("jPanel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name:", "Value:"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("jTable1.columnModel.title2")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("jTable1.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 651, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 229, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 675, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
